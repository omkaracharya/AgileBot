- hosts: nodes
  become: yes
  vars:
    msg_ansible_prerequisite: |
            You must update Ansible to at least 2.1 to use this ansible playbook.
            HINT:- http://docs.ansible.com/ansible/latest/intro_installation.html.
  pre_tasks:
    - name: "asnisble minimum version required (pre-requisite check)"
      assert:
        that: "ansible_version.full | version_compare('2.1', '>=')"
        msg: "{{ msg_ansible_prerequisite.split('\n') }}"
 
  tasks:
    # Ansible script is using few modules which requires ubuntu os version >= 16.04.
    - name: "Checking prerequisites for ubuntu platform."
      fail:
        msg: "Current ubuntu os version is lower than 16.00. Please install higher version to proceed."
      when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ansible_distribution_major_version < 16 

    # Ansible script is using few modules which requires redhat/centos os version >= 7.00.
    - name: "Checking prerequisites for RedHat/CentOS platform."
      fail:
        msg: "Current ubuntu os version is lower than 16.00. Please install higher version to proceed."
      when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux') and ansible_distribution_major_version < 7 

    # Add docker repo for ubuntu platform.
    - name: "add docker repo for ubuntu platform"
      apt_repository:
        repo="deb https://download.docker.com/linux/ubuntu xenial stable"
        state=present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    # Add docker repo gpg key for ubuntu platform.
    - name: "install docker-ce repo gpg key for ubuntu platform"
      apt_key:
        url="https://download.docker.com/linux/ubuntu/gpg"
        state=present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    # check docker pkg is already installed for ubuntu platform.
    - name: "check if docker-ce is installed on ubuntu platform" 
      command: dpkg-query -W docker-ce
      register: deb_check
      failed_when: deb_check.rc > 1
      changed_when: deb_check.rc == 1
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    # Install docker for ubuntu platform.
    - name: "Refresh cache and install docker-ce on ubuntu platform"
      apt:
        name=docker-ce
        update_cache=yes
        state=present
      when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and deb_check.rc != 1

    # Install docker for Redhat/Centos platform.
    - name: 'Install docker on RedHat/CentOS platform.'
      yum:
        name: docker
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    # start the docker service
    - name: 'start docker service if not running'
      service:
        name: docker
        state: started
        enabled: yes

    # Install pyton-pip
    - name: 'Install python-pip on ubuntu platform.'
      apt:
        name: python-pip
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
                                                                                    
    # Install pyton-pip
    - name: 'Install python-pip on RedHat/CentOS platform.'
      yum:
        name: python-pip
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    # Install docker-py
    - name: 'Install docker-py ansible module'
      pip:
        name: docker-py
        state: present

    # Add iptable rule to allow tcp traffic having port: 4500 
    - name: 'Add iptable rule to allow tcp traffic having port: 4500'
      shell: iptables -I INPUT -p tcp --dport 4500 -j ACCEPT

   # validate the user input
    - name: "Validation of user input"
      shell: python validateEnvConf.py
      register: cmd_res
      ignore_errors: True
    
    # fail if user input is wrong
    - name: "fail the play if the previous command (Validation of user input) did not succeed"
      fail: 
        msg: "Enviornment file is missing in the current directory or user input is invalid. Please check the env.conf again."
      when: cmd_res.rc == 1

    # Add iptable rule to allow tcp traffic having port: 4500 
    - name: 'Add iptable rule to forward tcp traffic to docker port: 4500'
      shell: iptables -I FORWARD -i eth1 -p tcp --dport 4500 -d 172.17.0.2 -j ACCEPT

    - name: 'Add NAT rule'
      shell: iptables -t nat -A  DOCKER -p tcp --dport 4500 -j DNAT --to-destination 172.17.0.2:4500 

    # Add iptable rule to allow tcp traffic having port: 4500 
    - name: 'copy the docker enviornment file to the remote machine.'
      copy: 
        src: env.conf 
        dest: /tmp/
    
    # restart a container
    - name: Restart a container
      docker:
        name: AgileBot
        image: jsingh8/agilebot:latest
        state: started
        env_file: /tmp/env.conf

    - debug: 
        msg="Please update the request URl at https://api.slack.com/apps/A7N5G20GY/interactive-messages to http://{{ ansible_ssh_host }}:4500/slack/message_actions"

                          
